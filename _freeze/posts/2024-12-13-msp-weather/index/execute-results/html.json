{
  "hash": "3d1facbc716898bd38f31d486cbf7c74",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analyzing weather trends in Minnesota\"\ndescription: \"Following extreme weather events at the Minneapolis-Saint Paul International Airport\"\nauthor:\n  - name: Liz Peterson\n    url: https://egp4aq.github.io/\n    orcid: 0000-0002-5300-3075\n    affiliation: MEDS\n    affiliation-url: https://bren.ucsb.edu/masters-programs/master-environmental-data-science\ndate: 2024-12-13\ncategories: [Quarto, MEDS]\ntoc: true\nimage: pioneer_press_image.png\ncitation:\n  url: https://egp4aq.github.io/posts/2024-12-10-msp-weather\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Introduction\n\nOn Halloween 1991, a massive blizzard hit Minnesota. This event has lived on in cultural infamy among Minnesotans. Of the 25 top snowfall events in Minnesota (from 1884-2023), only 5 of them occurred in the 21st century. There seems to be a trend away from high intensity snowfall events. This is a curious question: as the onset of climate change raises temperatures and increases the occurrence of extreme weather events, what does this mean for blizzards and intense snowfall events? Are there fewer intense snowfall events? Is that correlated to an increase in atmospheric CO2? And, if so, does that align with other trends we see in weather patterns?\n\nAs the general public becomes more worried about the reality of what a warming planet means for them, more research about how climate change might influence weather patterns is being conducted. There are studies analyzing what a warmer planet means for snowfall events, but these are mostly looking at worldwide trends. This analysis aims to see how this is working in Minnesota, a place where snow has a lot of cultural meaning. \n\n## Data details\n\nTo examine these questions, we will need to gather some important data: extensive weather and precipitation data from Minnesota, atmospheric CO2 concentration data, and some information about specific snowfall events.\n\nThe precipitation data came from NOAA's National Centers for Environmental Information. While this platform has a huge volume of data from all over, you are only allowed to request said data in 10 year chunks. Therefore, the chunks of data I downloaded were: 1985/01/01 - 1994/01/01, 1994/01/02 - 2003/12/31, 2004/01/01 - 2013/12/31, and 2014/01/01 - 2023/12/31. The weather station where the data was recorded was the Minneapolis Saint Paul international airport, which is located in Southeast Minnesota.\n\nThe emissions data comes from an R package called hockeystick. The package is very robust with all sorts of climate adjacent information. This includes atmospheric CO2, methane, emissions, instrumental and proxy temperature records, sea levels, Arctic/Antarctic sea-ice, Hurricanes, and Paleo climate data. \n\n## Analysis\n\n\n\n## Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/elizabethpeterson/Downloads/MEDS/egp4aq.github.io\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(here)\nlibrary(hockeystick)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhockeystick 0.8.5: Use hockeystick_cache_details() to view cached climate data.\nhockeystick 0.8.5: Use hockeystick_update_all() to update and cache all climate data.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\n\n# 1985/01/01 - 1994/01/01\nweather_1985_1994 <- read_csv(here('posts/2024-12-13-msp-weather/data/85-94.csv')) %>% # Read in csv\n  janitor::clean_names() %>% # convert column names to lower snake case\n  select(station, date, hourly_precipitation) %>% # select only columns we are interested in\n  mutate(hourly_precipitation = as.numeric(hourly_precipitation))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 86665 Columns: 124\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): REPORT_TYPE...3, SOURCE...4, HourlyPresentWeatherType, HourlySky... dbl\n(13): STATION, HourlyAltimeterSetting, HourlyDewPointTemperature, Hour... lgl\n(100): AWND, BackupDirection, BackupDistance, BackupDistanceUnit, Backu... dttm\n(1): DATE date (1): WindEquipmentChangeDate\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `REPORT_TYPE` -> `REPORT_TYPE...3`\n• `SOURCE` -> `SOURCE...4`\n• `REPORT_TYPE` -> `REPORT_TYPE...96`\n• `SOURCE` -> `SOURCE...97`\n```\n\n\n:::\n\n```{.r .cell-code}\n# 1994/01/02 - 2003/12/31\nweather_1994_2003 <- read_csv(here('posts/2024-12-13-msp-weather/data/94-03.csv')) %>%\n  janitor::clean_names() %>%\n  select(station, date, hourly_precipitation) %>%\n  mutate(hourly_precipitation = as.numeric(hourly_precipitation))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `REPORT_TYPE` -> `REPORT_TYPE...3`\n• `SOURCE` -> `SOURCE...4`\n• `REPORT_TYPE` -> `REPORT_TYPE...96`\n• `SOURCE` -> `SOURCE...97`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 141614 Columns: 124\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (19): REPORT_TYPE...3, SOURCE...4, DailyCoolingDegreeDays, DailyPeakWin...\ndbl  (64): STATION, AWND, CDSD, CLDD, DailyAverageDryBulbTemperature, DailyA...\nlgl  (27): BackupDirection, BackupDistance, BackupDistanceUnit, BackupElemen...\ndttm (13): DATE, ShortDurationEndDate005, ShortDurationEndDate010, ShortDura...\ndate  (1): WindEquipmentChangeDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `hourly_precipitation = as.numeric(hourly_precipitation)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2004/01/01 - 2013/12/31\nweather_2004_2014 <- read_csv(here('posts/2024-12-13-msp-weather/data/04-14.csv')) %>%\n  janitor::clean_names() %>%\n  select(station, date, hourly_precipitation) %>%\n  mutate(hourly_precipitation = as.numeric(hourly_precipitation))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `REPORT_TYPE` -> `REPORT_TYPE...3`\n• `SOURCE` -> `SOURCE...4`\n• `REPORT_TYPE` -> `REPORT_TYPE...96`\n• `SOURCE` -> `SOURCE...97`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 134637 Columns: 124\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): REPORT_TYPE...3, SOURCE...4, BackupDirection, BackupDistanceUnit,...\ndbl  (80): STATION, AWND, BackupDistance, BackupElevation, BackupLatitude, B...\nlgl   (5): BackupElevationUnit, DYHF, MonthlyAverageRH, MonthlyDewpointTempe...\ndttm (13): DATE, ShortDurationEndDate005, ShortDurationEndDate010, ShortDura...\ndate  (1): WindEquipmentChangeDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `hourly_precipitation = as.numeric(hourly_precipitation)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2014/01/01 - 2023/12/31\nweather_2014_2023 <- read_csv(here('posts/2024-12-13-msp-weather/data/14-23.csv')) %>%\n  janitor::clean_names() %>%\n  select(station, date, hourly_precipitation) %>%\n  mutate(hourly_precipitation = as.numeric(hourly_precipitation))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `REPORT_TYPE` -> `REPORT_TYPE...3`\n• `SOURCE` -> `SOURCE...4`\n• `REPORT_TYPE` -> `REPORT_TYPE...96`\n• `SOURCE` -> `SOURCE...97`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 224698 Columns: 124\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (21): REPORT_TYPE...3, BackupDirection, BackupDistanceUnit, BackupEleme...\ndbl  (80): STATION, SOURCE...4, AWND, BackupDistance, BackupLatitude, Backup...\nlgl   (9): BackupElevation, BackupElevationUnit, DYHF, MonthlyAverageRH, Mon...\ndttm (13): DATE, ShortDurationEndDate005, ShortDurationEndDate010, ShortDura...\ndate  (1): WindEquipmentChangeDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `hourly_precipitation = as.numeric(hourly_precipitation)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# First preliminary plot of 85 to 94 data\nggplot(weather_1985_1994, aes(date, hourly_precipitation)) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 7754 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate data to get daily precipitation\ndaily_avg_1985_1994 <- weather_1985_1994 %>%\n  mutate(date = as.Date(date)) %>%\n  group_by(date) %>%\n  summarize(daily_avg_precip = mean(hourly_precipitation))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(daily_avg_1985_1994, aes(date, daily_avg_precip)) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1663 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Try aggregating by month to get a longer term trend\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine all datasets into one and add a period column\ncombined_weather_data <- bind_rows(\n  weather_1985_1994 %>% mutate(period = \"1985-1994\"),\n  weather_1994_2003 %>% mutate(period = \"1994-2003\"),\n  weather_2004_2014 %>% mutate(period = \"2004-2014\"),\n  weather_2014_2023 %>% mutate(period = \"2014-2023\")\n)\n\n# Aggregate data to get monthly precipitation\nmonthly_avg_combined <- combined_weather_data %>%\n  mutate(date = as.Date(date),  # Ensure 'date' is in Date format\n         year_month = floor_date(date, \"month\")) %>%  # Create year_month column --> floor_date from lubridate\n  group_by(period, year_month) %>%  # Group by both 'period' and 'year_month'\n  summarize(monthly_avg_precip = mean(hourly_precipitation, na.rm = TRUE))  # Calculate monthly average\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'period'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify date of Halloween blizzard\nhighlight_date <- as.Date(\"1991-10-31\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot combined data\nggplot(monthly_avg_combined, aes(x = year_month, y = monthly_avg_precip, color = period)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"18 months\") +  # Format x-axis labels\n  labs(title = \"Monthly Average Precipitation by Period\",\n    x = \"Date\",\n    y = \"Monthly Average Precipitation (mm)\",\n    color = \"Period\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  geom_vline(aes(xintercept = highlight_date), color = \"black\", linetype = \"dashed\", size = 0.3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### Testing for a trend over time\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a linear regression model to test if there is a significant trend over time\nlinear_model <- lm(monthly_avg_precip ~ year_month, data = monthly_avg_combined)\n\n# View the summary of the model\nsummary(linear_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = monthly_avg_precip ~ year_month, data = monthly_avg_combined)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.009292 -0.003686 -0.001414  0.001829  0.039200 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -2.925e-04  8.798e-04  -0.332     0.74    \nyear_month   4.911e-07  6.649e-08   7.387 6.98e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.00592 on 467 degrees of freedom\nMultiple R-squared:  0.1046,\tAdjusted R-squared:  0.1027 \nF-statistic: 54.56 on 1 and 467 DF,  p-value: 6.98e-13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add the fitted line to the plot\nggplot(monthly_avg_combined, aes(x = year_month, y = monthly_avg_precip)) +\n  geom_point() +  # Scatter plot of the data\n  geom_smooth(method = \"lm\", se = FALSE, aes()) +  # Linear model line\n  labs(title = \"Monthly Average Precipitation with Trend\",\n    x = \"Date\",\n    y = \"Monthly Average Precipitation (mm)\",\n    color = \"Period\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Use hockeystick data for emissions\n\n::: {.cell}\n\n```{.r .cell-code}\nemissions <- get_emissions()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_emissions <- emissions %>%\n  filter(country == \"United States\") %>%\n  filter(year >= 1985 & year <= 2023)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(us_emissions, aes(x = year, y = co2)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Annual CO2 Emissions\",\n    x = \"Year\",\n    y = \"CO2 Emissions (million metric tons)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## REAL ANALYSIS FOR CO2 AND WEATHER\n### Merge precipitation data with CO2 emission data\n\n::: {.cell}\n\n```{.r .cell-code}\n#  aggregate the monthly precipitation data to be yearly data so we can merge it with the yearly us emissions data\nyearly_avg_precip <- monthly_avg_combined %>%\n  mutate(year = as.numeric(format(year_month, \"%Y\"))) %>%\n  group_by(year) %>%\n  summarize(yearly_avg_precip = mean(monthly_avg_precip, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# merge the us_emissions data and the precipitation data and get rid of the columns we don't need\nprecip_emissions <- left_join(yearly_avg_precip, us_emissions, by = \"year\") %>%\n  select(year, yearly_avg_precip, country, co2)\n```\n:::\n\n\nIn order to visualize the relationship between the yearly average precipitation and atmospheric co2, we need to use a gamma regression rather than the classic linear regression. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gamma regression\ngamma_model <- glm(yearly_avg_precip ~ co2, data = precip_emissions, family = Gamma(link = \"log\"))\nsummary(gamma_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = yearly_avg_precip ~ co2, family = Gamma(link = \"log\"), \n    data = precip_emissions)\n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -5.8291922  0.9087131  -6.415 1.73e-07 ***\nco2          0.0001275  0.0001666   0.765    0.449    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.1930582)\n\n    Null deviance: 7.5846  on 38  degrees of freedom\nResidual deviance: 7.4795  on 37  degrees of freedom\nAIC: -354.55\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the data with regression line\nggplot(precip_emissions, aes(x = co2, y = yearly_avg_precip)) +\n  geom_point() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = Gamma(link = \"log\")), \n              se = FALSE, \n              color = \"blue\") +\n  labs(title = \"Linear Relationship between CO2 Emissions and Precipitation\",\n    x = \"CO2 Emissions (million metric tons)\",\n    y = \"Yearly Average Precipitation (mm)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Hypothesis testing\n### Formulate hypotheses\n\nNow that we have our model, we will utilize hypothesis testing to evaluate how much we can rely on this model. To hypothesize on our gamma model, we will begin by formulating null and alternate hypotheses. The null hypothesis (or H0) is that there is no relationship between atmospheric co2 and precipitation, or in other words, the slope of the regression line is zero. The alternative hypothesis (or H1) is that there is a significant relationship between atmospheric co2 and precipitation, or in other words, the slope of the regression line is not zero. \n\nTo \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a linear regression model\nregression_model <- lm(yearly_avg_precip ~ co2, data = precip_emissions)\nresults <- tidy(regression_model)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresults %>%\n  kable(\"html\", caption = \"Regression Model Results\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Regression Model Results</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 0.0020938 </td>\n   <td style=\"text-align:right;\"> 0.0053196 </td>\n   <td style=\"text-align:right;\"> 0.3935935 </td>\n   <td style=\"text-align:right;\"> 0.6961403 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> co2 </td>\n   <td style=\"text-align:right;\"> 0.0000007 </td>\n   <td style=\"text-align:right;\"> 0.0000010 </td>\n   <td style=\"text-align:right;\"> 0.7159502 </td>\n   <td style=\"text-align:right;\"> 0.4785165 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nwhen we run this, we get 0.479 as the p value for the co2 variable. this is much higher than 0.05, which means we cannot reject the null hypothesis. \nfor the full model significance, we have a p value of 0.4785 which is also not statistically significant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(regression_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    2.5 %       97.5 %\n(Intercept) -8.684769e-03 1.287229e-02\nco2         -1.277878e-06 2.674409e-06\n```\n\n\n:::\n:::\n\n\nwhen we run our confidence interval for the intercept, we get [-0.008684769, 0.01287229] (for a 2.5%/97.5% split). this means that we can be 97.5% sure that the true intercept falls within that range. More importantly for our co2 variable we get [-1.277878e-06, 2.674409e-06]. This means that we are 97.5% confident that the true slope of the linear regression line for co2 is between that range, which includes zero. this simply further proves taht the slope is not significantly different from zero.\n\n\n\n### Sources\n\nhttps://www.twincities.com/2021/10/29/remembering-the-1991-halloween-blizzard/ accessed 12/10\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}